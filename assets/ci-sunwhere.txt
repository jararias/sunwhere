
# PRISTINE UBUNTU IMAGES: https://hub.docker.com/_/ubuntu/tags
# Vienen peladas y necesitan instalar muchas cosas
podman run --rm -it --net=host -e DISPLAY=$DISPLAY -w /root -v /home/jararias/code/devel/sunwhere:/root/code/devel/sunwhere ubuntu:latest

export PYVER="3.11"
export PYTHON=python$PYVER
apt-get update
apt-get install -y python3 $PYTHON-venv $PYTHON-dev lib$PYTHON-dev  # git gcc g++

# INTEL OFRECE UNA IMAGEN CON UBUNTU, Y LAS INTEL ONEAPI INSTALADAS !! QUE ADEMAS TIENE PYTHON3 !!
# # https://www.intel.com/content/www/us/en/developer/tools/oneapi/base-toolkit-download.html?operatingsystem=linux&distributions=docker
# podman run --rm -it --net=host -e DISPLAY=$DISPLAY -w /root -v /home/jararias/code/devel/sunwhere:/root/code/devel/sunwhere intel/oneapi-basekit
# # instala lo imprescindible necesario en el ubuntu
# apt-get update
# apt-get install -y python3.10-dev python3-venv git

# crea y entra en un entorno virtual de python
$PYTHON -m venv venv
source venv/bin/activate

# # instala el numexpr desde las fuentes
# git clone https://github.com/pydata/numexpr
# cd numexpr
# echo "[mkl]" > site.cfg
# echo "library_dirs = /opt/intel/oneapi/mkl/latest/lib/intel64" >> site.cfg
# echo "include_dirs = /opt/intel/oneapi/mkl/latest/include" >> site.cfg
# echo "libraries = mkl_rt" >> site.cfg
# python3 -m pip install -r requirements.txt
# python3 setup.py build install
# cd -

export SOURCE_DIR="code/devel/sunwhere"
python3 -m pip install $SOURCE_DIR/.[lint,test]
flake8 $SOURCE_DIR --count --select=E9,F63,F7,F82 --show-source --statistics
flake8 $SOURCE_DIR --count --exit-zero --max-complexity=20 --max-line-length=127 --statistics
cd $SOURCE_DIR
coverage run -m pytest tests/ -v
coverage report  # for report in the terminal
# coverage html  # for a comprehensive html report with links to the uncovered code

# Ctrl-D to terminate the container. Because it was run
# with the --rm option, it is automatically removed on exit
